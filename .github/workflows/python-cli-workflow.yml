name: Python CLI Package Build and Publish

on:
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Navigate to Python CLI directory
      run: cd python-cli

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine build

    - name: Build package
      run: |
        python -m build
        ls dist

    - name: Run tests
      run: |
        pip install pytest
        pytest

    # Optional: Publish to PyPI
    - name: Publish to PyPI
      if: github.event_name == 'release' && github.event.action == 'created'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m twine upload dist/*

    # Optional: Create GitHub Package
    - name: Create GitHub Package
      if: github.event_name == 'release' && github.event.action == 'created'
      uses: actions/upload-artifact@v3
      with:
        name: python-cli-package
        path: dist/*

    # Optional: Publish to GitHub Packages
    - name: Publish to GitHub Packages
      if: github.event_name == 'release' && github.event.action == 'created'
      run: |
        python -m pip install --upgrade pip
        python -m pip install twine
        python -m twine upload --repository-url https://maven.pkg.github.com/${{ github.repository }} dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
